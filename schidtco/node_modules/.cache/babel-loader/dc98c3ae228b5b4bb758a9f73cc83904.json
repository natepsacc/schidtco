{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar initS3 = require('../utils/init-s3');\n\nvar getBucketList = require('../utils/get-bucket-list'); // const getBucketHash = require('../utils/get-bucket-hash');\n\n\nvar listBuckets = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var apiKey, apiSecret, s3, buckets, promises;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            apiKey = _ref.apiKey, apiSecret = _ref.apiSecret;\n            _context2.prev = 1;\n            s3 = initS3(apiKey, apiSecret);\n            _context2.next = 5;\n            return getBucketList(s3);\n\n          case 5:\n            buckets = _context2.sent;\n            promises = buckets.map( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(bucket, index) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", {\n                          name: bucket // hash,\n\n                        });\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2, _x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            return _context2.abrupt(\"return\", Promise.all(promises));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw _context2.t0;\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function listBuckets(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = listBuckets;","map":null,"metadata":{},"sourceType":"script"}