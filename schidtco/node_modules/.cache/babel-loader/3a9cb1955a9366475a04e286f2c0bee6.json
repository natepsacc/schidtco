{"ast":null,"code":"const {\n  CID\n} = require('multiformats');\n\nconst Uploader = require('s3-streaming-upload').Uploader;\n\nconst streamUploadFile = (s3, params) => new Promise((resolve, reject) => {\n  const request = new Uploader({\n    service: s3,\n    objectParams: {\n      ACL: 'public-read'\n    },\n    ...params\n  });\n  request.send((err, data) => {\n    if (err) {\n      reject(err);\n    }\n\n    const {\n      ETag\n    } = data;\n    const hash = ETag.replace(/^\"|\"$/g, '');\n    const cidObj = CID.parse(hash);\n    let cidv0;\n    const cidv1 = cidObj.toV1().toString();\n\n    try {\n      cidv0 = cidObj.toV0().toString();\n    } catch (e) {\n      // fallback when cbor is used\n      cidv0 = cidv1;\n    }\n\n    resolve({\n      hash: cidv1,\n      hashV0: cidv0\n    });\n  });\n});\n\nmodule.exports = streamUploadFile;","map":{"version":3,"names":["CID","require","Uploader","streamUploadFile","s3","params","Promise","resolve","reject","request","service","objectParams","ACL","send","err","data","ETag","hash","replace","cidObj","parse","cidv0","cidv1","toV1","toString","toV0","e","hashV0","module","exports"],"sources":["/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/@fleekhq/fleek-storage-js/utils/stream-upload.js"],"sourcesContent":["const { CID } = require('multiformats');\nconst Uploader = require('s3-streaming-upload').Uploader;\n\nconst streamUploadFile = (s3, params) => (new Promise((resolve, reject) => {\n  const request = new Uploader({\n    service: s3,\n    objectParams: {\n      ACL: 'public-read',\n    },\n    ...params,\n  });\n\n  request.send((err, data) => {\n    if (err) {\n      reject(err);\n    }\n    const { ETag } = data;\n\n    const hash = ETag.replace(/^\"|\"$/g, '');\n\n    const cidObj = CID.parse(hash);\n  \n    let cidv0;\n  \n    const cidv1 = cidObj.toV1().toString();\n\n    try {\n      cidv0 = cidObj.toV0().toString();\n    } catch (e) {\n      // fallback when cbor is used\n      cidv0 = cidv1;\n    }\n\n    resolve ({ hash: cidv1, hashV0: cidv0 });\n  });\n}));\n\nmodule.exports = streamUploadFile;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAUC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAP,CAA+BC,QAAhD;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAiB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACzE,MAAMC,OAAO,GAAG,IAAIP,QAAJ,CAAa;IAC3BQ,OAAO,EAAEN,EADkB;IAE3BO,YAAY,EAAE;MACZC,GAAG,EAAE;IADO,CAFa;IAK3B,GAAGP;EALwB,CAAb,CAAhB;EAQAI,OAAO,CAACI,IAAR,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAe;IAC1B,IAAID,GAAJ,EAAS;MACPN,MAAM,CAACM,GAAD,CAAN;IACD;;IACD,MAAM;MAAEE;IAAF,IAAWD,IAAjB;IAEA,MAAME,IAAI,GAAGD,IAAI,CAACE,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAb;IAEA,MAAMC,MAAM,GAAGnB,GAAG,CAACoB,KAAJ,CAAUH,IAAV,CAAf;IAEA,IAAII,KAAJ;IAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,IAAP,GAAcC,QAAd,EAAd;;IAEA,IAAI;MACFH,KAAK,GAAGF,MAAM,CAACM,IAAP,GAAcD,QAAd,EAAR;IACD,CAFD,CAEE,OAAOE,CAAP,EAAU;MACV;MACAL,KAAK,GAAGC,KAAR;IACD;;IAEDf,OAAO,CAAE;MAAEU,IAAI,EAAEK,KAAR;MAAeK,MAAM,EAAEN;IAAvB,CAAF,CAAP;EACD,CAtBD;AAuBD,CAhCyC,CAA1C;;AAkCAO,MAAM,CAACC,OAAP,GAAiB1B,gBAAjB"},"metadata":{},"sourceType":"script"}