{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar initS3 = require('../utils/init-s3');\n\nvar getBucket = require('../utils/get-bucket');\n\nvar getFile = require('../utils/get-file');\n\nvar getHashFromKey = require('../utils/get-hash-from-key');\n\nvar getPublicUrl = require('../utils/get-public-url');\n\nvar _require = require('../utils/constants'),\n    GET_OPTIONS = _require.GET_OPTIONS;\n\nvar get = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _fileData;\n\n    var apiKey, apiSecret, key, bucket, _ref$getOptions, getOptions, fileData, invalidOption, validOptions, s3, publicUrl, params, data, returnData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiKey = _ref.apiKey, apiSecret = _ref.apiSecret, key = _ref.key, bucket = _ref.bucket, _ref$getOptions = _ref.getOptions, getOptions = _ref$getOptions === void 0 ? [GET_OPTIONS.DATA] : _ref$getOptions;\n            fileData = (_fileData = {}, _defineProperty(_fileData, GET_OPTIONS.KEY, key), _defineProperty(_fileData, GET_OPTIONS.BUCKET, bucket), _fileData); // validate getOptions\n\n            validOptions = Object.keys(GET_OPTIONS).map(function (optionKey) {\n              return GET_OPTIONS[optionKey];\n            });\n            getOptions.forEach(function (option) {\n              if (!validOptions.includes(option)) {\n                invalidOption = option;\n              }\n            });\n\n            if (!invalidOption) {\n              _context.next = 6;\n              break;\n            }\n\n            throw \"Invalid option \".concat(invalidOption);\n\n          case 6:\n            if (!(getOptions.length === 0)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw 'No Options specified';\n\n          case 8:\n            _context.prev = 8;\n            s3 = initS3(apiKey, apiSecret);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](8);\n            throw _context.t0;\n\n          case 15:\n            if (key) {\n              _context.next = 17;\n              break;\n            }\n\n            throw 'No file key was specified';\n\n          case 17:\n            if (fileData[GET_OPTIONS.BUCKET]) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.prev = 18;\n            _context.next = 21;\n            return getBucket(s3);\n\n          case 21:\n            fileData[GET_OPTIONS.BUCKET] = _context.sent;\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](18);\n            throw _context.t1;\n\n          case 27:\n            if (getOptions.includes(GET_OPTIONS.PUBLIC_URL)) {\n              publicUrl = getPublicUrl(fileData[GET_OPTIONS.BUCKET], fileData[GET_OPTIONS.KEY]);\n              fileData[GET_OPTIONS.PUBLIC_URL] = publicUrl;\n            }\n\n            if (!getOptions.includes(GET_OPTIONS.HASH)) {\n              _context.next = 38;\n              break;\n            }\n\n            _context.prev = 29;\n            _context.next = 32;\n            return getHashFromKey(fileData[GET_OPTIONS.BUCKET], fileData[GET_OPTIONS.KEY]);\n\n          case 32:\n            fileData[GET_OPTIONS.HASH] = _context.sent;\n            _context.next = 38;\n            break;\n\n          case 35:\n            _context.prev = 35;\n            _context.t2 = _context[\"catch\"](29);\n            throw _context.t2;\n\n          case 38:\n            if (!getOptions.includes(GET_OPTIONS.DATA)) {\n              _context.next = 50;\n              break;\n            }\n\n            _context.prev = 39;\n            params = {\n              Bucket: fileData[GET_OPTIONS.BUCKET],\n              Key: fileData[GET_OPTIONS.KEY]\n            };\n            _context.next = 43;\n            return getFile(s3, params);\n\n          case 43:\n            data = _context.sent;\n            fileData[GET_OPTIONS.DATA] = data;\n            _context.next = 50;\n            break;\n\n          case 47:\n            _context.prev = 47;\n            _context.t3 = _context[\"catch\"](39);\n            throw _context.t3;\n\n          case 50:\n            returnData = {};\n            getOptions.forEach(function (option) {\n              returnData[option] = fileData[option];\n            });\n            return _context.abrupt(\"return\", returnData);\n\n          case 53:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 12], [18, 24], [29, 35], [39, 47]]);\n  }));\n\n  return function get(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = get;","map":null,"metadata":{},"sourceType":"script"}