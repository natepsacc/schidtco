{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/schidtery/Desktop/schidtco/schidtco/schidtco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require('axios').default;\n\nvar _require = require('../config'),\n    ipfsGateway = _require.ipfsGateway;\n\nvar _require2 = require('../utils/constants'),\n    GET_FILE_FROM_HASH_OPTIONS = _require2.GET_FILE_FROM_HASH_OPTIONS;\n\nvar getFileFromHash = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var hash, _ref$getFileFromHashO, getFileFromHashOptions, invalidOption, validOptions, params, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            hash = _ref.hash, _ref$getFileFromHashO = _ref.getFileFromHashOptions, getFileFromHashOptions = _ref$getFileFromHashO === void 0 ? [] : _ref$getFileFromHashO;\n\n            if (hash) {\n              _context.next = 3;\n              break;\n            }\n\n            throw 'No hash was given';\n\n          case 3:\n            validOptions = Object.keys(GET_FILE_FROM_HASH_OPTIONS).map(function (optionKey) {\n              return GET_FILE_FROM_HASH_OPTIONS[optionKey];\n            });\n            getFileFromHashOptions.forEach(function (option) {\n              if (!validOptions.includes(option)) {\n                invalidOption = option;\n              }\n            });\n\n            if (!invalidOption) {\n              _context.next = 7;\n              break;\n            }\n\n            throw \"Invalid option \".concat(invalidOption);\n\n          case 7:\n            params = {\n              method: 'get',\n              url: \"\".concat(ipfsGateway, \"/\").concat(hash)\n            };\n\n            if (getFileFromHashOptions.includes(GET_FILE_FROM_HASH_OPTIONS.BUFFER)) {\n              params.responseType = 'arraybuffer';\n            }\n\n            _context.prev = 9;\n            _context.next = 12;\n            return axios(params);\n\n          case 12:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](9);\n            throw _context.t0;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 16]]);\n  }));\n\n  return function getFileFromHash(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = getFileFromHash;","map":null,"metadata":{},"sourceType":"script"}