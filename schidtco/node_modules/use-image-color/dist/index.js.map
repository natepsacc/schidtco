{"version":3,"file":"index.js","sources":["../node_modules/quantize/quantize.js","../src/useImageColor.js","../src/components/Image.jsx"],"sourcesContent":["/*\n * quantize.js Copyright 2008 Nick Rabinowitz\n * Ported to node.js by Olivier Lesnicki\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\n */\n\n// fill out a couple protovis dependencies\n/*\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\n * Copyright 2010 Stanford Visualization Group\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\n */\nif (!pv) {\n    var pv = {\n        map: function(array, f) {\n            var o = {};\n            return f ? array.map(function(d, i) {\n                o.index = i;\n                return f.call(o, d);\n            }) : array.slice();\n        },\n        naturalOrder: function(a, b) {\n            return (a < b) ? -1 : ((a > b) ? 1 : 0);\n        },\n        sum: function(array, f) {\n            var o = {};\n            return array.reduce(f ? function(p, d, i) {\n                o.index = i;\n                return p + f.call(o, d);\n            } : function(p, d) {\n                return p + d;\n            }, 0);\n        },\n        max: function(array, f) {\n            return Math.max.apply(null, f ? pv.map(array, f) : array);\n        }\n    }\n}\n\n/**\n * Basic Javascript port of the MMCQ (modified median cut quantization)\n * algorithm from the Leptonica library (http://www.leptonica.com/).\n * Returns a color map you can use to map original pixels to the reduced\n * palette. Still a work in progress.\n * \n * @author Nick Rabinowitz\n * @example\n \n// array of pixels as [R,G,B] arrays\nvar myPixels = [[190,197,190], [202,204,200], [207,214,210], [211,214,211], [205,207,207]\n                // etc\n                ];\nvar maxColors = 4;\n \nvar cmap = MMCQ.quantize(myPixels, maxColors);\nvar newPalette = cmap.palette();\nvar newPixels = myPixels.map(function(p) { \n    return cmap.map(p); \n});\n \n */\nvar MMCQ = (function() {\n    // private constants\n    var sigbits = 5,\n        rshift = 8 - sigbits,\n        maxIterations = 1000,\n        fractByPopulations = 0.75;\n\n    // get reduced-space color index for a pixel\n\n    function getColorIndex(r, g, b) {\n        return (r << (2 * sigbits)) + (g << sigbits) + b;\n    }\n\n    // Simple priority queue\n\n    function PQueue(comparator) {\n        var contents = [],\n            sorted = false;\n\n        function sort() {\n            contents.sort(comparator);\n            sorted = true;\n        }\n\n        return {\n            push: function(o) {\n                contents.push(o);\n                sorted = false;\n            },\n            peek: function(index) {\n                if (!sorted) sort();\n                if (index === undefined) index = contents.length - 1;\n                return contents[index];\n            },\n            pop: function() {\n                if (!sorted) sort();\n                return contents.pop();\n            },\n            size: function() {\n                return contents.length;\n            },\n            map: function(f) {\n                return contents.map(f);\n            },\n            debug: function() {\n                if (!sorted) sort();\n                return contents;\n            }\n        };\n    }\n\n    // 3d color space box\n\n    function VBox(r1, r2, g1, g2, b1, b2, histo) {\n        var vbox = this;\n        vbox.r1 = r1;\n        vbox.r2 = r2;\n        vbox.g1 = g1;\n        vbox.g2 = g2;\n        vbox.b1 = b1;\n        vbox.b2 = b2;\n        vbox.histo = histo;\n    }\n    VBox.prototype = {\n        volume: function(force) {\n            var vbox = this;\n            if (!vbox._volume || force) {\n                vbox._volume = ((vbox.r2 - vbox.r1 + 1) * (vbox.g2 - vbox.g1 + 1) * (vbox.b2 - vbox.b1 + 1));\n            }\n            return vbox._volume;\n        },\n        count: function(force) {\n            var vbox = this,\n                histo = vbox.histo;\n            if (!vbox._count_set || force) {\n                var npix = 0,\n                    i, j, k, index;\n                for (i = vbox.r1; i <= vbox.r2; i++) {\n                    for (j = vbox.g1; j <= vbox.g2; j++) {\n                        for (k = vbox.b1; k <= vbox.b2; k++) {\n                            index = getColorIndex(i, j, k);\n                            npix += (histo[index] || 0);\n                        }\n                    }\n                }\n                vbox._count = npix;\n                vbox._count_set = true;\n            }\n            return vbox._count;\n        },\n        copy: function() {\n            var vbox = this;\n            return new VBox(vbox.r1, vbox.r2, vbox.g1, vbox.g2, vbox.b1, vbox.b2, vbox.histo);\n        },\n        avg: function(force) {\n            var vbox = this,\n                histo = vbox.histo;\n            if (!vbox._avg || force) {\n                var ntot = 0,\n                    mult = 1 << (8 - sigbits),\n                    rsum = 0,\n                    gsum = 0,\n                    bsum = 0,\n                    hval,\n                    i, j, k, histoindex;\n                for (i = vbox.r1; i <= vbox.r2; i++) {\n                    for (j = vbox.g1; j <= vbox.g2; j++) {\n                        for (k = vbox.b1; k <= vbox.b2; k++) {\n                            histoindex = getColorIndex(i, j, k);\n                            hval = histo[histoindex] || 0;\n                            ntot += hval;\n                            rsum += (hval * (i + 0.5) * mult);\n                            gsum += (hval * (j + 0.5) * mult);\n                            bsum += (hval * (k + 0.5) * mult);\n                        }\n                    }\n                }\n                if (ntot) {\n                    vbox._avg = [~~(rsum / ntot), ~~ (gsum / ntot), ~~ (bsum / ntot)];\n                } else {\n                    //console.log('empty box');\n                    vbox._avg = [~~(mult * (vbox.r1 + vbox.r2 + 1) / 2), ~~ (mult * (vbox.g1 + vbox.g2 + 1) / 2), ~~ (mult * (vbox.b1 + vbox.b2 + 1) / 2)];\n                }\n            }\n            return vbox._avg;\n        },\n        contains: function(pixel) {\n            var vbox = this,\n                rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            return (rval >= vbox.r1 && rval <= vbox.r2 &&\n                gval >= vbox.g1 && gval <= vbox.g2 &&\n                bval >= vbox.b1 && bval <= vbox.b2);\n        }\n    };\n\n    // Color map\n\n    function CMap() {\n        this.vboxes = new PQueue(function(a, b) {\n            return pv.naturalOrder(\n                a.vbox.count() * a.vbox.volume(),\n                b.vbox.count() * b.vbox.volume()\n            )\n        });;\n    }\n    CMap.prototype = {\n        push: function(vbox) {\n            this.vboxes.push({\n                vbox: vbox,\n                color: vbox.avg()\n            });\n        },\n        palette: function() {\n            return this.vboxes.map(function(vb) {\n                return vb.color\n            });\n        },\n        size: function() {\n            return this.vboxes.size();\n        },\n        map: function(color) {\n            var vboxes = this.vboxes;\n            for (var i = 0; i < vboxes.size(); i++) {\n                if (vboxes.peek(i).vbox.contains(color)) {\n                    return vboxes.peek(i).color;\n                }\n            }\n            return this.nearest(color);\n        },\n        nearest: function(color) {\n            var vboxes = this.vboxes,\n                d1, d2, pColor;\n            for (var i = 0; i < vboxes.size(); i++) {\n                d2 = Math.sqrt(\n                    Math.pow(color[0] - vboxes.peek(i).color[0], 2) +\n                    Math.pow(color[1] - vboxes.peek(i).color[1], 2) +\n                    Math.pow(color[2] - vboxes.peek(i).color[2], 2)\n                );\n                if (d2 < d1 || d1 === undefined) {\n                    d1 = d2;\n                    pColor = vboxes.peek(i).color;\n                }\n            }\n            return pColor;\n        },\n        forcebw: function() {\n            // XXX: won't  work yet\n            var vboxes = this.vboxes;\n            vboxes.sort(function(a, b) {\n                return pv.naturalOrder(pv.sum(a.color), pv.sum(b.color))\n            });\n\n            // force darkest color to black if everything < 5\n            var lowest = vboxes[0].color;\n            if (lowest[0] < 5 && lowest[1] < 5 && lowest[2] < 5)\n                vboxes[0].color = [0, 0, 0];\n\n            // force lightest color to white if everything > 251\n            var idx = vboxes.length - 1,\n                highest = vboxes[idx].color;\n            if (highest[0] > 251 && highest[1] > 251 && highest[2] > 251)\n                vboxes[idx].color = [255, 255, 255];\n        }\n    };\n\n    // histo (1-d array, giving the number of pixels in\n    // each quantized region of color space), or null on error\n\n    function getHisto(pixels) {\n        var histosize = 1 << (3 * sigbits),\n            histo = new Array(histosize),\n            index, rval, gval, bval;\n        pixels.forEach(function(pixel) {\n            rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            index = getColorIndex(rval, gval, bval);\n            histo[index] = (histo[index] || 0) + 1;\n        });\n        return histo;\n    }\n\n    function vboxFromPixels(pixels, histo) {\n        var rmin = 1000000,\n            rmax = 0,\n            gmin = 1000000,\n            gmax = 0,\n            bmin = 1000000,\n            bmax = 0,\n            rval, gval, bval;\n        // find min/max\n        pixels.forEach(function(pixel) {\n            rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            if (rval < rmin) rmin = rval;\n            else if (rval > rmax) rmax = rval;\n            if (gval < gmin) gmin = gval;\n            else if (gval > gmax) gmax = gval;\n            if (bval < bmin) bmin = bval;\n            else if (bval > bmax) bmax = bval;\n        });\n        return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, histo);\n    }\n\n    function medianCutApply(histo, vbox) {\n        if (!vbox.count()) return;\n\n        var rw = vbox.r2 - vbox.r1 + 1,\n            gw = vbox.g2 - vbox.g1 + 1,\n            bw = vbox.b2 - vbox.b1 + 1,\n            maxw = pv.max([rw, gw, bw]);\n        // only one pixel, no split\n        if (vbox.count() == 1) {\n            return [vbox.copy()]\n        }\n        /* Find the partial sum arrays along the selected axis. */\n        var total = 0,\n            partialsum = [],\n            lookaheadsum = [],\n            i, j, k, sum, index;\n        if (maxw == rw) {\n            for (i = vbox.r1; i <= vbox.r2; i++) {\n                sum = 0;\n                for (j = vbox.g1; j <= vbox.g2; j++) {\n                    for (k = vbox.b1; k <= vbox.b2; k++) {\n                        index = getColorIndex(i, j, k);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        } else if (maxw == gw) {\n            for (i = vbox.g1; i <= vbox.g2; i++) {\n                sum = 0;\n                for (j = vbox.r1; j <= vbox.r2; j++) {\n                    for (k = vbox.b1; k <= vbox.b2; k++) {\n                        index = getColorIndex(j, i, k);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        } else { /* maxw == bw */\n            for (i = vbox.b1; i <= vbox.b2; i++) {\n                sum = 0;\n                for (j = vbox.r1; j <= vbox.r2; j++) {\n                    for (k = vbox.g1; k <= vbox.g2; k++) {\n                        index = getColorIndex(j, k, i);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        }\n        partialsum.forEach(function(d, i) {\n            lookaheadsum[i] = total - d\n        });\n\n        function doCut(color) {\n            var dim1 = color + '1',\n                dim2 = color + '2',\n                left, right, vbox1, vbox2, d2, count2 = 0;\n            for (i = vbox[dim1]; i <= vbox[dim2]; i++) {\n                if (partialsum[i] > total / 2) {\n                    vbox1 = vbox.copy();\n                    vbox2 = vbox.copy();\n                    left = i - vbox[dim1];\n                    right = vbox[dim2] - i;\n                    if (left <= right)\n                        d2 = Math.min(vbox[dim2] - 1, ~~ (i + right / 2));\n                    else d2 = Math.max(vbox[dim1], ~~ (i - 1 - left / 2));\n                    // avoid 0-count boxes\n                    while (!partialsum[d2]) d2++;\n                    count2 = lookaheadsum[d2];\n                    while (!count2 && partialsum[d2 - 1]) count2 = lookaheadsum[--d2];\n                    // set dimensions\n                    vbox1[dim2] = d2;\n                    vbox2[dim1] = vbox1[dim2] + 1;\n                    // console.log('vbox counts:', vbox.count(), vbox1.count(), vbox2.count());\n                    return [vbox1, vbox2];\n                }\n            }\n\n        }\n        // determine the cut planes\n        return maxw == rw ? doCut('r') :\n            maxw == gw ? doCut('g') :\n            doCut('b');\n    }\n\n    function quantize(pixels, maxcolors) {\n        // short-circuit\n        if (!pixels.length || maxcolors < 2 || maxcolors > 256) {\n            // console.log('wrong number of maxcolors');\n            return false;\n        }\n\n        // XXX: check color content and convert to grayscale if insufficient\n\n        var histo = getHisto(pixels),\n            histosize = 1 << (3 * sigbits);\n\n        // check that we aren't below maxcolors already\n        var nColors = 0;\n        histo.forEach(function() {\n            nColors++\n        });\n        if (nColors <= maxcolors) {\n            // XXX: generate the new colors from the histo and return\n        }\n\n        // get the beginning vbox from the colors\n        var vbox = vboxFromPixels(pixels, histo),\n            pq = new PQueue(function(a, b) {\n                return pv.naturalOrder(a.count(), b.count())\n            });\n        pq.push(vbox);\n\n        // inner function to do the iteration\n\n        function iter(lh, target) {\n            var ncolors = 1,\n                niters = 0,\n                vbox;\n            while (niters < maxIterations) {\n                vbox = lh.pop();\n                if (!vbox.count()) { /* just put it back */\n                    lh.push(vbox);\n                    niters++;\n                    continue;\n                }\n                // do the cut\n                var vboxes = medianCutApply(histo, vbox),\n                    vbox1 = vboxes[0],\n                    vbox2 = vboxes[1];\n\n                if (!vbox1) {\n                    // console.log(\"vbox1 not defined; shouldn't happen!\");\n                    return;\n                }\n                lh.push(vbox1);\n                if (vbox2) { /* vbox2 can be null */\n                    lh.push(vbox2);\n                    ncolors++;\n                }\n                if (ncolors >= target) return;\n                if (niters++ > maxIterations) {\n                    // console.log(\"infinite loop; perhaps too few pixels!\");\n                    return;\n                }\n            }\n        }\n\n        // first set of colors, sorted by population\n        iter(pq, fractByPopulations * maxcolors);\n        // console.log(pq.size(), pq.debug().length, pq.debug().slice());\n\n        // Re-sort by the product of pixel occupancy times the size in color space.\n        var pq2 = new PQueue(function(a, b) {\n            return pv.naturalOrder(a.count() * a.volume(), b.count() * b.volume())\n        });\n        while (pq.size()) {\n            pq2.push(pq.pop());\n        }\n\n        // next set - generate the median cuts using the (npix * vol) sorting.\n        iter(pq2, maxcolors - pq2.size());\n\n        // calculate the actual colors\n        var cmap = new CMap();\n        while (pq2.size()) {\n            cmap.push(pq2.pop());\n        }\n\n        return cmap;\n    }\n\n    return {\n        quantize: quantize\n    }\n})();\n\nmodule.exports = MMCQ.quantize\n","import quantize from 'quantize';\nimport { useEffect, useState, useCallback } from 'react';\n\nconst CHANNELS = 4;\nconst FORMATS = { rgb: 'rgb', hex: 'hex' };\nconst DEFAULT_SETTINGS = {\n  colors: 5,\n  cors: false,\n  windowSize: 50,\n  format: FORMATS.hex,\n};\n\nexport default function useImageColor(src, _settings = {}) {\n  const settings = { ...DEFAULT_SETTINGS, ..._settings };\n  const [colors, setColors] = useState();\n\n  const chunk = useCallback((original, chunkSize = 4) => {\n    const data = [];\n\n    for (let i = 0; i < original.length; i += chunkSize * settings.windowSize) {\n      data.push(original.slice(i, i + chunkSize));\n    }\n\n    return data;\n  }, [settings.windowSize]);\n\n  const mapToHex = useCallback(\n    (values) => `#${values.map((i) => {\n      const h = i.toString('16');\n      return h.length < 2 ? `0${h}` : h;\n    }).join('')}`,\n    [],\n  );\n\n  if (!FORMATS[settings.format]) {\n    throw new Error('Invalid output format');\n  }\n\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    const img = document.createElement('img');\n\n    const context = canvas.getContext('2d');\n\n    if (settings.cors) {\n      img.setAttribute('crossOrigin', '');\n    }\n\n    img.onload = () => {\n      canvas.width = img.naturalWidth;\n      canvas.height = img.naturalHeight;\n      context.drawImage(img, 0, 0);\n      const { data } = context.getImageData(0, 0, img.naturalWidth, img.naturalHeight);\n      const colorMap = quantize(chunk(data, CHANNELS), settings.colors);\n      const pallete = colorMap.palette();\n      setColors(settings.format === FORMATS.rgb ? pallete : pallete.map(mapToHex));\n    };\n\n    img.src = src;\n  }, [src, settings.cors, settings.colors, settings.format, chunk, mapToHex]);\n\n  return { colors };\n}\n","import React from 'react';\nimport useImageColor from '../useImageColor';\n\nconst wrapperDiv = {\n  width: '100%',\n  position: 'relative',\n};\n\nconst bg = {\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n};\n\nconst imageStyle = {\n  width: '100%',\n  height: 'auto',\n  display: 'block',\n  position: 'relative',\n};\n\nexport default function ImageComponent({\n  src,\n  style = {},\n  thumbnail,\n  wrapperStyle = {},\n  wrapperClassName = '',\n  ...props\n}) {\n  const { colors } = useImageColor(thumbnail, { cors: true });\n  return (\n    <div className={wrapperClassName} style={{ ...wrapperDiv, ...wrapperStyle }}>\n      { colors && <div style={{ ...bg, backgroundColor: colors[0] }} /> }\n      { <img style={{ ...imageStyle, ...style }} src={src} {...props} /> }\n    </div>\n  );\n}\n"],"names":["CHANNELS","FORMATS","rgb","hex","DEFAULT_SETTINGS","colors","cors","windowSize","format","useImageColor","src","_settings","settings","useState","setColors","chunk","useCallback","original","chunkSize","data","i","length","push","slice","mapToHex","values","map","h","toString","join","Error","useEffect","canvas","document","createElement","img","context","getContext","setAttribute","onload","width","naturalWidth","height","naturalHeight","drawImage","getImageData","colorMap","quantize","pallete","palette","wrapperDiv","position","bg","top","left","right","bottom","imageStyle","display","ImageComponent","style","thumbnail","wrapperStyle","wrapperClassName","props","React","backgroundColor"],"mappings":"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"}